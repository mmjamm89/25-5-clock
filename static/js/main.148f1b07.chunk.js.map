{"version":3,"sources":["App.js","index.js"],"names":["Break","title","changeTime","type","time","className","id","onClick","Session","App","useState","timeDisplayed","setTimeDisplayed","breakLength","setBreakLength","sessionLength","setSessionLength","timerOn","setTimerOn","timerId","setTimerId","audio","useRef","amount","newCount","useEffect","interval","setInterval","clearInterval","current","play","currentTime","mins","Math","floor","secs","timeFormat","undefined","load","src","preload","ref","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.148f1b07.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './style.css';\r\n\r\nfunction App() {\r\n\r\n  const [timeDisplayed, setTimeDisplayed] = useState(1500);\r\n  const [breakLength, setBreakLength] = useState(5);\r\n  const [sessionLength, setSessionLength] = useState(25);\r\n  const [timerOn, setTimerOn] = useState(false);\r\n  const [timerId, setTimerId] = useState('Session');  \r\n  const audio = useRef(null);\r\n    \r\n  let loop = undefined;\r\n  \r\n    //Set the correct time format for the clock display\r\n    const timeFormat = (time) => {   \r\n        let mins = Math.floor(time / 60);\r\n        let secs = time % 60;\r\n        return(\r\n            (mins < 10 ? '0' + mins : mins) + ':' + (secs < 10 ? '0' + secs : secs)\r\n        );\r\n\r\n    }\r\n   \r\n    //Change break length, session length, and set the display time equal to the session length\r\n    const changeTime = (amount, type) => {\r\n        let newCount;\r\n        if(type === 'session'){\r\n            newCount = sessionLength + amount;\r\n        }else{\r\n            newCount =  breakLength + amount;\r\n        }\r\n\r\n        if(newCount > 0 && newCount <= 60 && !timerOn){\r\n            type === 'session' ? setSessionLength(newCount) : setBreakLength(newCount);\r\n            if(type === 'session'){\r\n                setTimeDisplayed(newCount * 60);\r\n            }\r\n        }\r\n    }\r\n\r\n    const setActive = () => {\r\n        setTimerOn(!timerOn);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(timerOn && timeDisplayed > 0){\r\n            const interval = setInterval(() => {\r\n                setTimeDisplayed(timeDisplayed - 1);\r\n            }, 50);\r\n            return () => clearInterval(interval);\r\n        }else if(timeDisplayed === 0){\r\n            \r\n            audio.current.play();\r\n            audio.current.currentTime = 0;\r\n\r\n            if(timerId === 'Session'){\r\n                setTimeDisplayed(breakLength * 60);\r\n                setTimerId('Break');\r\n            }\r\n            if(timerId === 'Break'){\r\n                setTimeDisplayed(sessionLength * 60);\r\n                setTimerId('Session');\r\n            }\r\n        }\r\n    }, [breakLength, sessionLength, timeDisplayed, timerId, timerOn])\r\n    \r\n    //Reset\r\n    const reset = () => {\r\n        setBreakLength(5);\r\n        setSessionLength(25);\r\n        setTimeDisplayed(1500);\r\n        setTimerId('Session');\r\n        setTimerOn(false);\r\n        clearInterval(loop);\r\n        audio.current.load();\r\n     }    \r\n    \r\n  return (\r\n    <div className=\"App\">\r\n      <p className='title'>Pomodoro Clock</p>      \r\n      {/* Display */}\r\n      <div className='display'>\r\n            <div className='display_screen'>\r\n                {/* Label changer */}\r\n                <p id='timer-label'>{timerId}</p>\r\n                <p id=\"time-left\">{timeFormat(timeDisplayed)}</p>\r\n            </div>\r\n            <div className='display_controls'>\r\n                <button\r\n                    id='start_stop'\r\n                    className='play_btn'\r\n                    onClick={setActive}>play/pause\r\n                </button>                \r\n                <button\r\n                    id='reset'\r\n                    className='reset_btn'\r\n                    onClick={reset}>reset\r\n                </button>\r\n                <audio \r\n                    src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\r\n                    id='beep'\r\n                    preload='auto'\r\n                    type='audio/mpeg'\r\n                    ref={audio}>\r\n                </audio>\r\n            </div>            \r\n        </div>\r\n        <Break \r\n            title={'Break Length'}\r\n            changeTime={changeTime}\r\n            type={'break'}\r\n            time={breakLength} />\r\n        <Session\r\n            title={'Session Length'}\r\n            changeTime={changeTime}\r\n            type={'session'}\r\n            time={sessionLength} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Break = ({title, changeTime, type, time}) => {\r\n    return(\r\n        <div className='break'>\r\n            <h1 id='break-label' className='break_title'>{title}</h1>\r\n            <h1 id='break-length' className='break_length'>{time}</h1>\r\n            <div className='break_length_controls'>\r\n                <button\r\n                    id='break-decrement'\r\n                    className='break_add_btn'\r\n                    onClick={() => changeTime(-1, type)}>-\r\n                </button>\r\n                <button\r\n                    id='break-increment'\r\n                    className='break_sub_btn'\r\n                    onClick={() => changeTime(1, type)}>+\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Session = ({title, changeTime, type, time}) => {\r\n    return(\r\n        <div className=\"timer\">\r\n        <h1 id='session-label' className='timer_title'>{title}</h1>\r\n        <h1 id='session-length' className='timer_length'>{time}</h1>\r\n        <div className='timer_length_controls'>\r\n            <button\r\n                id='session-decrement'\r\n                className='timer_add_btn'\r\n                onClick={() => changeTime(-1, type)}>-\r\n            </button>\r\n            <button\r\n                id='session-increment'\r\n                className='timer_sub_btn'\r\n                onClick={() => changeTime(1, type)}>+\r\n            </button>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}